buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
    repositories {
        jcenter()
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

jar {
    baseName = 'erm-dataservice'
    version = project.property('branch') + '-' + project.property('buildNumber')
}

publishing {
    publications {
        DataservicePublication(MavenPublication) {
            from components.java
            groupId 'com.soen387.erm'
            artifactId 'erm-dataservice'
            version project.property('branch') + '-' + project.property('buildNumber')
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['DataservicePublication']
		publish = true
    pkg {
        repo = 'erm-maven'
        name = 'erm-dataservice'
        userOrg = 'soen387-fall2016'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/soen387-fall2016/erm-dataservice'

        version {
            name = project.property('branch') + '-' + project.property('buildNumber')
            desc = 'ERM Dataservice'
            released  = new Date()
        }
    }
}

bintrayUpload {
    dependsOn 'bootRepackage'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//    compile ('org.springframework.data:spring-data-rest-hal-browser')
    compile "io.springfox:springfox-swagger2:2.6.0"
    compile('io.springfox:springfox-data-rest:2.6.0')
    compile('io.springfox:springfox-swagger-ui:2.6.0')
	compile("com.h2database:h2")
//    runtime('mysql:mysql-connector-java') // replace h2 with this when we set up MySQL
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
